{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class DataTransferService {\n  constructor() {\n    this.ShowEmployee = new BehaviorSubject(this.employee);\n    this.TransferEmployee = this.ShowEmployee.asObservable();\n  }\n  DataTransfer(employee) {\n    this.ShowEmployee.next(employee);\n  }\n}\nDataTransferService.ɵfac = function DataTransferService_Factory(t) {\n  return new (t || DataTransferService)();\n};\nDataTransferService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataTransferService,\n  factory: DataTransferService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","DataTransferService","constructor","ShowEmployee","employee","TransferEmployee","asObservable","DataTransfer","next","factory","ɵfac","providedIn"],"sources":["/Users/riyamodi/mono-repo/libs/common-lookup/src/lib/data-transfer.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Employee } from 'libs/common-lookup/Employee';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataTransferService {\n\n  public employee!:Employee\n  private ShowEmployee= new BehaviorSubject<Employee>(this.employee);\n  TransferEmployee=this.ShowEmployee.asObservable();\n\n  constructor() { }\n\n  DataTransfer(employee:Employee){\n    this.ShowEmployee.next(employee);\n  }\n}\n"],"mappings":"AAEA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,mBAAmB;EAM9BC,YAAA;IAHQ,KAAAC,YAAY,GAAE,IAAIH,eAAe,CAAW,IAAI,CAACI,QAAQ,CAAC;IAClE,KAAAC,gBAAgB,GAAC,IAAI,CAACF,YAAY,CAACG,YAAY,EAAE;EAEjC;EAEhBC,YAAYA,CAACH,QAAiB;IAC5B,IAAI,CAACD,YAAY,CAACK,IAAI,CAACJ,QAAQ,CAAC;EAClC;;AAVWH,mBAAmB,C;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB,C;SAAnBA,mBAAmB;EAAAQ,OAAA,EAAnBR,mBAAmB,CAAAS,IAAA;EAAAC,UAAA,EAFlB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}